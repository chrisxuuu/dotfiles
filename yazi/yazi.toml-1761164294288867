"$schema" = "https://yazi-rs.github.io/schemas/yazi.json"

[manager]
ratio = [1, 4, 3]
sort_by = "alphabetical"
sort_sensitive = false
sort_reverse = false
sort_dir_first = true
sort_translit = false
linemode = "none"
show_hidden = false
show_symlink = true
scrolloff = 5

[preview]
wrap = "no"
tab_size = 2
max_width = 600
max_height = 900
cache_dir = ""
image_delay = 30
image_filter = "triangle"
image_quality = 75
ueberzug_scale = 1.0
ueberzug_offset = [0.0, 0.0, 0.0, 0.0]

[opener]
edit = [
	{ run = 'nvim "$@"', desc = "Edit with Neovim", block = true, for = "unix" },
]
open = [
	{ run = 'xdg-open "$@"', desc = "Open", for = "linux" },
	{ run = 'open "$@"', desc = "Open", for = "macos" },
]
reveal = [
	{ run = 'open -R "$@"', desc = "Reveal in Finder", for = "macos" },
	{ run = 'nautilus "$(dirname "$0")"', desc = "Reveal", for = "linux" },
]
play = [{ run = 'mpv "$@"', orphan = true, for = "unix", desc = "Play" }]
archive = [{ run = 'unar "$@"', desc = "Extract here" }]

[open]
rules = [
	{ name = "*/", use = [
		"edit",
		"open",
		"reveal",
	] },

	{ mime = "text/*", use = [
		"edit",
		"reveal",
	] },
	{ mime = "image/*", use = [
		"open",
		"reveal",
	] },
	{ mime = "video/*", use = [
		"play",
		"reveal",
	] },
	{ mime = "audio/*", use = [
		"play",
		"reveal",
	] },
	{ mime = "inode/x-empty", use = [
		"edit",
		"reveal",
	] },

	{ mime = "application/json", use = [
		"edit",
		"reveal",
	] },
	{ mime = "*/javascript", use = [
		"edit",
		"reveal",
	] },

	{ mime = "application/zip", use = [
		"archive",
		"reveal",
	] },
	{ mime = "application/gzip", use = [
		"archive",
		"reveal",
	] },
	{ mime = "application/x-tar", use = [
		"archive",
		"reveal",
	] },
	{ mime = "application/x-bzip", use = [
		"archive",
		"reveal",
	] },
	{ mime = "application/x-bzip2", use = [
		"archive",
		"reveal",
	] },
	{ mime = "application/x-7z-compressed", use = [
		"archive",
		"reveal",
	] },
	{ mime = "application/x-rar", use = [
		"archive",
		"reveal",
	] },

	{ mime = "*", use = [
		"open",
		"reveal",
	] },
]

[tasks]
micro_workers = 5
macro_workers = 10
bizarre_retry = 5
image_alloc = 536870912  # 512MB
image_bound = [0, 0]
suppress_preload = false

[plugin]
prepend_preloaders = [
	# Add your preloaders here
]

append_preloaders = [
	# Add your preloaders here
]

prepend_previewers = [
	# Add your previewers here
]

append_previewers = [
	# Add your previewers here
]

[input]
cursor_blink = false

# cd
cd_title = "Change directory:"
cd_origin = "top-center"
cd_offset = [0, 2, 50, 3]

# create
create_title = ["Create:", "Create (dir):"]
create_origin = "top-center"
create_offset = [0, 2, 50, 3]

# rename
rename_title = "Rename:"
rename_origin = "hovered"
rename_offset = [0, 1, 50, 3]

# filter
filter_title = "Filter:"
filter_origin = "top-center"
filter_offset = [0, 2, 50, 3]

# find
find_title = ["Find next:", "Find previous:"]
find_origin = "top-center"
find_offset = [0, 2, 50, 3]

# search
search_title = "Search via {n}:"
search_origin = "top-center"
search_offset = [0, 2, 50, 3]

# shell
shell_title = ["Shell:", "Shell (block):"]
shell_origin = "top-center"
shell_offset = [0, 2, 50, 3]

[confirm]
# trash
trash_title = "Move {n} selected file{s} to trash? (y/N)"
trash_origin = "top-center"
trash_offset = [0, 2, 50, 3]

# delete
delete_title = "Delete {n} selected file{s} permanently? (y/N)"
delete_origin = "top-center"
delete_offset = [0, 2, 50, 3]

# overwrite
overwrite_title = "Overwrite an existing file? (y/N)"
overwrite_origin = "top-center"
overwrite_offset = [0, 2, 50, 3]

# quit
quit_title = "{n} task{s} running, sure to quit? (y/N)"
quit_origin = "top-center"
quit_offset = [0, 2, 50, 3]

[pick]
open_title = "Open with:"
open_origin = "hovered"
open_offset = [0, 1, 50, 7]

[which]
sort_by = "none"
sort_sensitive = false
sort_reverse = false
sort_translit = false

[log]
enabled = false
